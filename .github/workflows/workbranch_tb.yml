#
#   This runs incoming DUT through predefined testbench
#   
#

name: Testbench pipeline for DUT

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "work_branch" ]
  pull_request:
    branches: [ "work_branch" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Verilator, a free SV simulator
      - name: Install Verilator
        run: sudo apt-get install -y verilator

      # Complite project using Verilator
      - name: Compile SV files
        run: verilator --cc --exe --build --timing tb_top.cpp splitter.sv

      # Runs a set of commands using the runners shell
      - name: Run testbench
        run: |
          ./obj_dir/Vsplitter
